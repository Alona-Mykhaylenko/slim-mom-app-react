{"version":3,"sources":["components/loginForm/validator/Validator.js","img/svg/eye-login.svg","components/loginForm/LoginForm.module.css","components/loginForm/LoginForm.js","pages/loginPage/LoginPage.js"],"names":["schema","yup","shape","email","min","max","required","password","module","exports","InitialState","LoginForm","location","useLocation","dispatch","useDispatch","useState","showPassword","showSetPassword","className","style","container","formContainer","authTitle","initialValues","validationSchema","onSubmit","values","logIn","form","type","name","placeholder","input","component","errorMessage","onClick","prevState","eyeIconBtn","eyeIcon","href","svg","buttonContainer","authButton","pathname","to","authLink","LoginPage"],"mappings":"oHAAA,aAEIA,EAASC,MAAaC,MAAM,CAC9BC,MAAOF,MAEJG,IAAI,EAAG,sBACPC,IAAI,GAAI,sBACRF,MAAM,2BACNG,SAAS,mBACZC,SAAUN,MAEPG,IAAI,EAAG,sBACPC,IAAI,GAAI,qBACRC,SAAS,qBAGCN,O,iCChBA,QAA0B,uC,oBCCzCQ,EAAOC,QAAU,CAAC,UAAY,6BAA6B,cAAgB,iCAAiC,UAAY,6BAA6B,KAAO,wBAAwB,MAAQ,yBAAyB,QAAU,2BAA2B,WAAa,8BAA8B,aAAe,gCAAgC,gBAAkB,mCAAmC,WAAa,8BAA8B,SAAW,4BAA4B,aAAe,kC,+ICSpeC,EAAe,CACnBP,MAAO,GACPI,SAAU,IA4FGI,EAzFG,WAChB,IAAMC,EAAWC,cACXC,EAAWC,cACjB,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAGA,OACE,qBAAKC,UAAWC,IAAMC,UAAtB,SACE,sBAAKF,UAAWC,IAAME,cAAtB,UACE,oBAAIH,UAAWC,IAAMG,UAArB,sCACA,cAAC,IAAD,CACEC,cAAed,EACfe,iBAAkBzB,IAClB0B,SAAU,SAACC,GACTb,EAASc,YAAMD,KAJnB,SAOE,eAAC,IAAD,CAAMR,UAAWC,IAAMS,KAAvB,UACE,kCACE,cAAC,IAAD,CACEC,KAAK,QACLC,KAAK,QACLC,YAAY,YACZb,UAAWC,IAAMa,QAEnB,cAAC,IAAD,CACEF,KAAK,QACLG,UAAU,MACVf,UAAWC,IAAMe,kBAIrB,kCACE,cAAC,IAAD,CACEL,KAAMb,EAAe,OAAS,WAC9Bc,KAAK,WACLC,YAAY,aACZb,UAAWC,IAAMa,QAEnB,wBACEH,KAAK,SACLM,QArCa,kBAAMlB,GAAgB,SAACmB,GAAD,OAAgBA,MAsCnDlB,UAAWC,IAAMkB,WAHnB,SAKGrB,EACC,qBAAKE,UAAWC,IAAMmB,QAAtB,SACE,qBAAKC,KAAI,UAAKC,IAAL,iBAGX,qBAAKtB,UAAWC,IAAMmB,QAAtB,SACE,qBAAKC,KAAI,UAAKC,IAAL,0BAIf,cAAC,IAAD,CACEV,KAAK,WACLG,UAAU,MACVf,UAAWC,IAAMe,kBAIrB,sBAAKhB,UAAWC,IAAMsB,gBAAtB,UACE,wBAAQvB,UAAWC,IAAMuB,WAAYb,KAAK,SAA1C,SACyB,kBAAtBlB,EAASgC,SACN,eACA,YAGiB,kBAAtBhC,EAASgC,SACR,cAAC,IAAD,CAAMC,GAAG,SAAS1B,UAAWC,IAAM0B,SAAnC,SACyB,kBAAtBlC,EAASgC,SACN,UACA,iBAGN,cAAC,IAAD,CAAMC,GAAG,gBAAgB1B,UAAWC,IAAM0B,SAA1C,SACyB,kBAAtBlC,EAASgC,SACN,UACA,+BCpFPG,UANG,WACd,OACI,cAAC,EAAD","file":"static/js/9.6b64f47a.chunk.js","sourcesContent":["import * as yup from \"yup\";\n\nlet schema = yup.object().shape({\n  email: yup\n    .string()\n    .min(3, \"*3 symbols minimum\")\n    .max(50, \"*email is too long\")\n    .email(\"* Email must contain @ \")\n    .required(\"*Required field\"),\n  password: yup\n    .string()\n    .min(3, \"*3 symbols minimum\")\n    .max(50, \"*Name is too long\")\n    .required(\"*Required field\"),\n});\n\nexport default schema;\n","export default __webpack_public_path__ + \"static/media/eye-login.c5b930eb.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"LoginForm_container__1Jqon\",\"formContainer\":\"LoginForm_formContainer__2Jf7d\",\"authTitle\":\"LoginForm_authTitle__3lZMH\",\"form\":\"LoginForm_form__l-fOw\",\"input\":\"LoginForm_input__1TQQn\",\"eyeIcon\":\"LoginForm_eyeIcon__1zHh-\",\"eyeIconBtn\":\"LoginForm_eyeIconBtn__UbL8S\",\"errorMessage\":\"LoginForm_errorMessage__3gsZ1\",\"buttonContainer\":\"LoginForm_buttonContainer__1E9dV\",\"authButton\":\"LoginForm_authButton__3tYue\",\"authLink\":\"LoginForm_authLink__URlpt\",\"navContainer\":\"LoginForm_navContainer__3jkgK\"};","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { logIn } from \"../../redux/auth/auth.operations\";\nimport { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport schema from \"./validator/Validator\";\nimport style from \"./LoginForm.module.css\";\nimport { useLocation } from \"react-router\";\nimport { Link } from \"react-router-dom\";\nimport svg from \"../../img/svg/eye-login.svg\";\n\nconst InitialState = {\n  email: \"\",\n  password: \"\",\n};\n\nconst LoginForm = () => {\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const [showPassword, showSetPassword] = useState(false);\n  const toggleShowPassword = () => showSetPassword((prevState) => !prevState);\n\n  return (\n    <div className={style.container}>\n      <div className={style.formContainer}>\n        <h1 className={style.authTitle}>Вход</h1>\n        <Formik\n          initialValues={InitialState}\n          validationSchema={schema}\n          onSubmit={(values) => {\n            dispatch(logIn(values));\n          }}\n        >\n          <Form className={style.form}>\n            <label>\n              <Field\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Sign in *\"\n                className={style.input}\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className={style.errorMessage}\n              />\n            </label>\n\n            <label>\n              <Field\n                type={showPassword ? \"text\" : \"password\"}\n                name=\"password\"\n                placeholder=\"Password *\"\n                className={style.input}\n              />\n              <button\n                type=\"button\"\n                onClick={toggleShowPassword}\n                className={style.eyeIconBtn}\n              >\n                {showPassword ? (\n                  <svg className={style.eyeIcon}>\n                    <use href={`${svg}#icon-eye`}></use>\n                  </svg>\n                ) : (\n                  <svg className={style.eyeIcon}>\n                    <use href={`${svg}#icon-eye-hidden`}></use>\n                  </svg>\n                )}\n              </button>\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className={style.errorMessage}\n              />\n            </label>\n\n            <div className={style.buttonContainer}>\n              <button className={style.authButton} type=\"submit\">\n                {location.pathname === \"/registration\"\n                  ? \"Registration\"\n                  : \"Sign in\"}\n              </button>\n\n              {location.pathname === \"/registration\" ? (\n                <Link to=\"/login\" className={style.authLink}>\n                  {location.pathname === \"/registration\"\n                    ? \"Sign in\"\n                    : \"Registration\"}\n                </Link>\n              ) : (\n                <Link to=\"/registration\" className={style.authLink}>\n                  {location.pathname === \"/registration\"\n                    ? \"Sign in\"\n                    : \"Registration\"}\n                </Link>\n              )}\n            </div>\n          </Form>\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default LoginForm;\n","import React from 'react';\nimport LoginForm from \"../../components/loginForm/LoginForm\"\n\nconst LoginPage = () => {\n    return (\n        <LoginForm/>\n    );\n}\n\nexport default LoginPage;\n"],"sourceRoot":""}