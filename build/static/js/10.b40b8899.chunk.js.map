{"version":3,"sources":["components/loginForm/validator/Validator.js","img/svg/eye-login.svg","components/registrationForm/RegistrationForm.module.css","components/registrationForm/RegistrationForm.js","pages/registrationPage/RegistrationPage.js"],"names":["schema","yup","shape","email","min","max","required","password","module","exports","InitialState","username","RegistrationForm","dispatch","useDispatch","location","useLocation","history","useHistory","useState","showPassword","showSetPassword","className","style","container","formContainer","authTitle","initialValues","validationSchema","onSubmit","user","register","push","form","type","name","placeholder","input","component","errorMessage","onClick","prevState","eyeIconBtn","eyeIcon","href","svg","buttonContainer","authButton","pathname","to","authLink","RegistrationPage"],"mappings":"qHAAA,aAEIA,EAASC,MAAaC,MAAM,CAC9BC,MAAOF,MAEJG,IAAI,EAAG,sBACPC,IAAI,GAAI,sBACRF,MAAM,2BACNG,SAAS,mBACZC,SAAUN,MAEPG,IAAI,EAAG,sBACPC,IAAI,GAAI,qBACRC,SAAS,qBAGCN,O,iCChBA,QAA0B,uC,oBCCzCQ,EAAOC,QAAU,CAAC,UAAY,oCAAoC,cAAgB,wCAAwC,UAAY,oCAAoC,KAAO,+BAA+B,MAAQ,gCAAgC,QAAU,kCAAkC,WAAa,qCAAqC,aAAe,uCAAuC,gBAAkB,0CAA0C,WAAa,qCAAqC,SAAW,mCAAmC,aAAe,yC,+ICSjjBC,EAAe,CACnBC,SAAU,GACVR,MAAO,GACPI,SAAU,IA8GGK,EA3GU,WACvB,IAAMC,EAAWC,cACXC,EAAWC,cACXC,EAAUC,cAEhB,EAAwCC,oBAAS,GAAjD,mBAAOC,EAAP,KAAqBC,EAArB,KAGA,OACE,qBAAKC,UAAWC,IAAMC,UAAtB,SACE,sBAAKF,UAAWC,IAAME,cAAtB,UACE,oBAAIH,UAAWC,IAAMG,UAArB,gFACA,cAAC,IAAD,CACEC,cAAejB,EACfkB,iBAAkB5B,IAClB6B,SAAU,SAACC,GACTjB,EAASkB,YAASD,IAClBb,EAAQe,KAAK,WALjB,SAQE,eAAC,IAAD,CAAMV,UAAWC,IAAMU,KAAvB,UACE,kCACE,cAAC,IAAD,CACEC,KAAK,OACLC,KAAK,WACLC,YAAY,SACZd,UAAWC,IAAMc,QAEnB,cAAC,IAAD,CACEF,KAAK,WACLG,UAAU,MACVhB,UAAWC,IAAMgB,kBAIrB,kCACE,cAAC,IAAD,CACEL,KAAK,QACLC,KAAK,QACLC,YAAY,UACZd,UAAWC,IAAMc,QAEnB,cAAC,IAAD,CACEF,KAAK,QACLG,UAAU,MACVhB,UAAWC,IAAMgB,kBAIrB,kCACE,cAAC,IAAD,CACEL,KAAMd,EAAe,OAAS,WAC9Be,KAAK,WACLC,YAAY,aACZd,UAAWC,IAAMc,QAGnB,wBACEH,KAAK,SACLM,QArDa,kBAAMnB,GAAgB,SAACoB,GAAD,OAAgBA,MAsDnDnB,UAAWC,IAAMmB,WAHnB,SAKGtB,EACC,qBAAKE,UAAWC,IAAMoB,QAAtB,SACE,qBAAKC,KAAI,UAAKC,IAAL,iBAGX,qBAAKvB,UAAWC,IAAMoB,QAAtB,SACE,qBAAKC,KAAI,UAAKC,IAAL,0BAIf,cAAC,IAAD,CACEV,KAAK,WACLG,UAAU,MACVhB,UAAWC,IAAMgB,kBAIrB,sBAAKjB,UAAWC,IAAMuB,gBAAtB,UACE,wBAAQxB,UAAWC,IAAMwB,WAAYb,KAAK,SAA1C,SACyB,kBAAtBnB,EAASiC,SACN,eACA,YAGiB,kBAAtBjC,EAASiC,SACR,cAAC,IAAD,CAAMC,GAAG,SAAS3B,UAAWC,IAAM2B,SAAnC,SACyB,kBAAtBnC,EAASiC,SACN,UACA,iBAGN,cAAC,IAAD,CAAMC,GAAG,gBAAgB3B,UAAWC,IAAM2B,SAA1C,SACyB,kBAAtBnC,EAASiC,SACN,UACA,+BCrGPG,UARU,WACrB,OACI,8BACA,cAAC,EAAD","file":"static/js/10.b40b8899.chunk.js","sourcesContent":["import * as yup from \"yup\";\n\nlet schema = yup.object().shape({\n  email: yup\n    .string()\n    .min(3, \"*3 symbols minimum\")\n    .max(50, \"*email is too long\")\n    .email(\"* Email must contain @ \")\n    .required(\"*Required field\"),\n  password: yup\n    .string()\n    .min(3, \"*3 symbols minimum\")\n    .max(50, \"*Name is too long\")\n    .required(\"*Required field\"),\n});\n\nexport default schema;\n","export default __webpack_public_path__ + \"static/media/eye-login.c5b930eb.svg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RegistrationForm_container___0Ysc\",\"formContainer\":\"RegistrationForm_formContainer__2B7ag\",\"authTitle\":\"RegistrationForm_authTitle__3wGhU\",\"form\":\"RegistrationForm_form__1_oBY\",\"input\":\"RegistrationForm_input__3kTmb\",\"eyeIcon\":\"RegistrationForm_eyeIcon__l1lIP\",\"eyeIconBtn\":\"RegistrationForm_eyeIconBtn__77SEm\",\"errorMessage\":\"RegistrationForm_errorMessage__-EUd4\",\"buttonContainer\":\"RegistrationForm_buttonContainer__1jbbf\",\"authButton\":\"RegistrationForm_authButton__3ndVg\",\"authLink\":\"RegistrationForm_authLink___M22Y\",\"navContainer\":\"RegistrationForm_navContainer__22_CG\"};","import { ErrorMessage, Field, Form, Formik } from \"formik\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useLocation } from \"react-router-dom\";\nimport { register } from \"../../redux/auth/auth.operations\";\nimport schema from \"../loginForm/validator/Validator\";\nimport style from \"./RegistrationForm.module.css\";\nimport svg from \"../../img/svg/eye-login.svg\";\n\nconst InitialState = {\n  username: \"\",\n  email: \"\",\n  password: \"\",\n};\n\nconst RegistrationForm = () => {\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const history = useHistory();\n\n  const [showPassword, showSetPassword] = useState(false);\n  const toggleShowPassword = () => showSetPassword((prevState) => !prevState);\n\n  return (\n    <div className={style.container}>\n      <div className={style.formContainer}>\n        <h1 className={style.authTitle}>Регистрация</h1>\n        <Formik\n          initialValues={InitialState}\n          validationSchema={schema}\n          onSubmit={(user) => {\n            dispatch(register(user));\n            history.push(\"/login\");\n          }}\n        >\n          <Form className={style.form}>\n            <label>\n              <Field\n                type=\"text\"\n                name=\"username\"\n                placeholder=\"Name *\"\n                className={style.input}\n              />\n              <ErrorMessage\n                name=\"username\"\n                component=\"div\"\n                className={style.errorMessage}\n              />\n            </label>\n\n            <label>\n              <Field\n                type=\"email\"\n                name=\"email\"\n                placeholder=\"Login *\"\n                className={style.input}\n              />\n              <ErrorMessage\n                name=\"email\"\n                component=\"div\"\n                className={style.errorMessage}\n              />\n            </label>\n\n            <label>\n              <Field\n                type={showPassword ? \"text\" : \"password\"}\n                name=\"password\"\n                placeholder=\"Password *\"\n                className={style.input}\n              />\n\n              <button\n                type=\"button\"\n                onClick={toggleShowPassword}\n                className={style.eyeIconBtn}\n              >\n                {showPassword ? (\n                  <svg className={style.eyeIcon}>\n                    <use href={`${svg}#icon-eye`}></use>\n                  </svg>\n                ) : (\n                  <svg className={style.eyeIcon}>\n                    <use href={`${svg}#icon-eye-hidden`}></use>\n                  </svg>\n                )}\n              </button>\n              <ErrorMessage\n                name=\"password\"\n                component=\"div\"\n                className={style.errorMessage}\n              />\n            </label>\n\n            <div className={style.buttonContainer}>\n              <button className={style.authButton} type=\"submit\">\n                {location.pathname === \"/registration\"\n                  ? \"Registration\"\n                  : \"Sign in\"}\n              </button>\n\n              {location.pathname === \"/registration\" ? (\n                <Link to=\"/login\" className={style.authLink}>\n                  {location.pathname === \"/registration\"\n                    ? \"Sign in\"\n                    : \"Registration\"}\n                </Link>\n              ) : (\n                <Link to=\"/registration\" className={style.authLink}>\n                  {location.pathname === \"/registration\"\n                    ? \"Sign in\"\n                    : \"Registration\"}\n                </Link>\n              )}\n            </div>\n          </Form>\n        </Formik>\n      </div>\n    </div>\n  );\n};\n\nexport default RegistrationForm;\n","import React from 'react';\nimport RegistrationForm from '../../components/registrationForm/RegistrationForm';\n\nconst RegistrationPage = () => {\n    return (\n        <div>\n        <RegistrationForm/>\n        </div>\n    );\n}\n\nexport default RegistrationPage;\n"],"sourceRoot":""}